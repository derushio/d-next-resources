import '@/app/globals.css';
import { AppToast } from '@/components/atom/general/toast/AppToast';
import { BodyClient } from '@/components/navigation/body/BodyClient';
import { BodyServer } from '@/components/navigation/body/BodyServer';
import { Flowbite, ThemeModeScript, ThemeProps } from 'flowbite-react';
import type { Metadata } from 'next';
import localFont from 'next/font/local';

const geistSans = localFont({
  src: './fonts/GeistVF.woff',
  variable: '--font-geist-sans',
  weight: '100 900',
});
const geistMono = localFont({
  src: './fonts/GeistMonoVF.woff',
  variable: '--font-geist-mono',
  weight: '100 900',
});

/**
 * flowbiteのtheme設定
 */
const theme = {
  theme: {
    button: {
      color: {
        primary: 'bg-primary hover:bg-primary2 text-white',
        error: 'bg-error hover:bg-error2 text-white',
        warn: 'bg-warn hover:bg-warn2 text-black',
      },
    },
  },
} satisfies ThemeProps;

/**
 * アプリのメタデータ
 */
export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

/**
 * 全てのページで読み込まれるレイアウト
 * Server Component
 */
export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang='en' className='h-full'>
      <head>
        <ThemeModeScript />
      </head>
      <body
        className={`${geistSans.className} ${geistMono.className} antialiased h-full`}
      >
        <Flowbite theme={theme}>
          <BodyClient>
            <BodyServer>
              {children}
              <AppToast />
            </BodyServer>
          </BodyClient>
        </Flowbite>
      </body>
    </html>
  );
}
